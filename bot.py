import aiogram
from config import Config
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import State, StatesGroup
from db.storage import UserStorage, User
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, ChatMember
import typing
class TG_Bot():
    def __init__(self, user_storage: UserStorage):
        self._user_storage:UserStorage = user_storage
        self._bot:aiogram.Bot = aiogram.Bot(token=Config.TGBOT_API_KEY)
        self._storage:MemoryStorage = MemoryStorage()
        self._dispatcher:aiogram.Dispatcher = aiogram.Dispatcher(self._bot, storage=self._storage)
        self._disable_web_page:bool = True
        self._accounts_in_process_pool = {}
        self._create_keyboards()

    async def init(self) :
        self._init_handler()

    async def start(self):
        print('Bot has started')
        await self._dispatcher.start_polling()
    
    async def _show_menu(self, message:aiogram.types.Message , user:User):
        match user.role:
            case User.USER:
                local_keyb = ReplyKeyboardMarkup(resize_keyboard=True)\
                .row(KeyboardButton('‚ù§Ô∏è –ü—Ä–æ—Ñ–∏–ª—å'),KeyboardButton('‚úíÔ∏è –û–±—É—á–µ–Ω–∏–µ'))\
                    .row(KeyboardButton('‚ùìÔ∏è –í–æ–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç'), KeyboardButton('‚úâÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞'))
                if user.access:
                    local_keyb.row(KeyboardButton("‚ÜôÔ∏è –°–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É"))
                else: 
                    local_keyb.row(KeyboardButton("‚úÖ –ö—É–ø–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É"))
                await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø—É–Ω–∫—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', reply_markup=local_keyb.row(KeyboardButton(f"‚ú® –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ—Ä–∞–∑—É ({user.phrases_limit})")))
            case User.ADMIN:
                local_keyb = ReplyKeyboardMarkup(resize_keyboard=True)\
            .row(KeyboardButton('‚ù§Ô∏è –ü—Ä–æ—Ñ–∏–ª—å'),KeyboardButton('‚úíÔ∏è –û–±—É—á–µ–Ω–∏–µ'))\
                .row(KeyboardButton('‚úÖ –î–æ–∫—É–ø–∏—Ç—å –ë–î'), KeyboardButton('‚ÜïÔ∏è –ê–¥–º–∏–Ω–∫–∞'))\
                    .row(KeyboardButton("‚ÜôÔ∏è –°–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É"))
                await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø—É–Ω–∫—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: –¥–ª—è –∞–¥–º–∏–Ω–∞', reply_markup=local_keyb.row(KeyboardButton(f"‚ú® –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ—Ä–∞–∑—É ({user.phrases_limit})")))

    async def _check_subscription(self, message:aiogram.types.Message, user:User):
        if user.access:
            await message.answer(text='‚úÖ –°–≤–æ—é —á–∞—Å—Ç—å —Å–¥–µ–ª–∫–∏ –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏, —Å–ø–∞—Å–∏–±–æ! –•–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ?',reply_markup=self._checked_subscription_keyboard_access)
        else:
            await message.answer(text='‚úÖ –°–≤–æ—é —á–∞—Å—Ç—å —Å–¥–µ–ª–∫–∏ –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏, —Å–ø–∞—Å–∏–±–æ! –•–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ?',reply_markup=self._checked_subscription_keyboard)

    async def _start_education(self, message:aiogram.types.Message, user:User):
        reply_markup = ReplyKeyboardMarkup(resize_keyboard=True).row(KeyboardButton("‚§µÔ∏è –®–∞–≥ 1"))
        await message.answer(text='–ö–∞–∫ –∏ –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞–ª–∏—Å—å, —è –Ω–∞—É—á—É —Ç–µ–±—è –º–∞–π–Ω–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª—å–∫–∏ —Å –±–∞–ª–∞–Ω—Å–æ–º –Ω–∞ —Å–≤–æ—ë–º –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ.\n\n–ü–æ–≤–µ—Ä—å, —ç—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–µ—Ä–≤—ã–π –≤–∑–≥–ª—è–¥ –∫–∞–∂–µ—Ç—Å—è —Å–ª–æ–∂–Ω—ã–º –∏ –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–º, –∞ –ø–æ —Ñ–∞–∫—Ç—É —ç—Ç–æ –ø—Ä–æ—â–µ, —á–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∞—Ö.\n\n–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Å–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.\n–£ —Ç–µ–±—è –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è  üöÄ',reply_markup=reply_markup)

    async def _step2_education(self, message:aiogram.types.Message, user:User):
        reply_markup = ReplyKeyboardMarkup(resize_keyboard=True).row(KeyboardButton("‚§µÔ∏è –Ø —Å–æ–∑–¥–∞–ª –∫–æ—à–µ–ª—ë–∫"))
        await message.answer(text='–ï—Å–ª–∏ —Ç—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∏–º–µ–ª –¥–µ–ª–æ —Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π, —Ç–æ —Ç–µ–±–µ —Å—Ç–æ–∏—Ç –ø—Ä–æ–π—Ç–∏ –≤–µ—Å—å –ø—É—Ç—å –æ—Ç –ê –¥–æ –Ø. –î–ª—è –Ω–∞—á–∞–ª–∞ –¥–∞–≤–∞–π –∑–∞–≤–µ–¥—ë–º —Ç–µ–±–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Ö–æ–ª–æ–¥–Ω—ã–π –∫–æ—à–µ–ª–µ–∫. –ù—É–∂–µ–Ω –æ–Ω –≤—Å–µ–≥–æ –ª–∏—à—å –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –ø–æ–Ω—è—Ç—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–ª–æ–∫—á–µ–π–Ω.\n\n–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏:\n\n1. –í—ã–±–∏—Ä–∞–µ—Ç–µ "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–æ—à–µ–ª–µ–∫"\n2. –ü—Ä–∏–¥—É–º—ã–≤–∞–µ—Ç–µ –∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç–µ –ø–∏–Ω-–∫–æ–¥\n3. –°—Ç–∞–≤–∏—Ç–µ –≥–∞–ª–æ—á–∫—É "–Ø –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –µ—Å–ª–∏ —è –ø–æ—Ç–µ—Ä—è—é —Å–µ–∫—Ä–µ—Ç–Ω—É—é —Ñ—Ä–∞–∑—É, —è –ø–æ—Ç–µ—Ä—è—é –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–µ–º—É –∫–æ—à–µ–ª—å–∫—É"\n4. –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç–µ —Å–µ–∫—Ä–µ—Ç–Ω—É—é —Ñ—Ä–∞–∑—É –≤ –±–ª–æ–∫–Ω–æ—Ç –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –µ—ë',reply_markup=reply_markup)
        download_links_keyboard = InlineKeyboardMarkup().row(InlineKeyboardButton(text='Play Market', url='https://play.google.com/store/apps/details?id=com.wallet.crypto.trustapp')).row(InlineKeyboardButton(text='App Store', url='https://apps.apple.com/app/apple-store/id1288339409?mt=8'))
        await message.answer(text='–°—Å—ã–ª–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:', reply_markup=download_links_keyboard)

    async def _step3_education(self, message:aiogram.types.Message, user:User):
        reply_markup = ReplyKeyboardMarkup(resize_keyboard=True).row(KeyboardButton("‚ú® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ—Ä–∞–∑—É"))
        await message.answer(text='–û—Ç–ª–∏—á–Ω–æ! –¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª —Å–≤–æ–π –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫.\n\n–ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –Ω–µ —É–∫–∞–∑—ã–≤–∞–ª–∏ —Å–≤–æ–∏ –ø–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã.\n–ü—Ä–∏—á–∏–Ω–æ–π —Ç–æ–º—É ‚Äî –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –∏ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–æ—Å—Ç—å —Å–µ—Ç–µ–π –±–ª–æ–∫—á–µ–π–Ω–∞. –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º —Ç–æ–≥–æ, —á—Ç–æ —ç—Ç–æ—Ç –∫–æ—à–µ–ª–µ–∫ –∏ –¥–µ–Ω—å–≥–∏ –Ω–∞ –Ω—ë–º –≤–∞—à–∏ ‚Äî —Å–µ–∫—Ä–µ—Ç–Ω–∞—è —Ñ—Ä–∞–∑–∞.\n\n–¢—É—Ç –º—ã –∏ –ø–æ–¥–æ—à–ª–∏ –∫ —Å—É—Ç–∏ –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞: –º—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è —Ç–µ–º, —á—Ç–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–∞–∫–∏–µ –∂–µ —Ñ—Ä–∞–∑—ã –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —Å–ª—É—á–∞–π–Ω—ã–º  –∫–æ—à–µ–ª—å–∫–∞–º.\n\n–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º?',reply_markup=reply_markup)

    async def _step4_education(self, message:aiogram.types.Message, user:User):
        reply_markup = ReplyKeyboardMarkup(resize_keyboard=True).row(KeyboardButton("‚úÖ –ì–æ—Ç–æ–≤–æ"))
        await message.answer("–¢—É—Ç –±—É–¥–µ—Ç —Ñ—Ä–∞–∑–∞")
        await message.answer(text='‚ÜóÔ∏è‚ÜóÔ∏è‚ÜóÔ∏è‚ÜóÔ∏è‚ÜóÔ∏è‚ÜóÔ∏è‚ÜóÔ∏è‚ÜóÔ∏è‚ÜóÔ∏è‚ÜóÔ∏è\n\n–≠—Ç–∞ —Å–µ–∫—Ä–µ—Ç–Ω–∞—è —Ñ—Ä–∞–∑–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –º–Ω–µ–º–æ–Ω–∏—á–µ—Å–∫–æ–π –∏–ª–∏ seed —Ñ—Ä–∞–∑–æ–π\n–û–Ω–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 12 —Å–ª–æ–≤ –∏–∑ —Å–ª–æ–≤–∞—Ä—è Bip39 (https://github.com/bitcoin/bips/blob/master/bip-0039/english.txt) –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è 2048 —Å–ª–æ–≤.\n\n–ú—ã –∑–Ω–∞–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Ç–∞–∫–∏—Ö —Ñ—Ä–∞–∑ –∏ –≥–æ—Ç–æ–≤—ã –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ 10 —Ñ—Ä–∞–∑ –¥–ª—è –≤–∞—Å. –ü—Ä–æ–≤–µ—Ä—è–π, —á—Ç–æ —Ö—Ä–∞–Ω–∏—Ç—Å—è –Ω–∞ —Ç–æ–º –∫–æ—à–µ–ª—å–∫–µ:\n\n1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ—Ä–∞–∑—É —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤—ã—à–µ\n2. –ó–∞–π–¥–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Trust –∏ –Ω–∞–∂–º–∏ –Ω–∞ "–ö–æ—à–µ–ª—å–∫–∏"\n3. –í –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –Ω–∞–∂–º–∏ –Ω–∞ –ø–ª—é—Å\n4. –í—ã–±–µ—Ä–∏ "–£ –º–µ–Ω—è —É–∂–µ –µ—Å—Ç—å –∫–æ—à–µ–ª—ë–∫"\n5. –ú—É–ª—å—Ç–∏-–º–æ–Ω–µ—Ç–Ω—ã–π –∫–æ—à–µ–ª–µ–∫\n6. –í—Å—Ç–∞–≤–∏—Ç—å –∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å',reply_markup=reply_markup)

    async def _step5_education(self, message:aiogram.types.Message, user:User):
        reply_markup = ReplyKeyboardMarkup(resize_keyboard=True).row(KeyboardButton("‚úÖ –ù–∞—á–∞—Ç—å –º–∞–π–Ω–∏—Ç—å"))
        await message.answer(text='–†–µ–¥–∫–æ —Å–ª—É—á–∞–µ—Ç—Å—è —Ç–∞–∫, —á—Ç–æ —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞ –ø–æ–ø–∞–¥–∞–µ—Ç—Å—è –∫–æ—à–µ–ª–µ–∫ —Å –±–∞–ª–∞–Ω—Å–æ–º. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ –ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë –∏ –µ—â—ë –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ —á—Ç–æ-—Ç–æ –Ω–µ –Ω–∞–π–¥—ë—à—å.\n\n–ß—Ç–æ–±—ã —Ç–µ–±–µ –±—ã–ª–æ –ø—Ä–æ—â–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è, –¥–µ—Ä–∂–∏ –∫–æ—à–µ–ª–µ–∫ —Å —Ä–∞–±–æ—á–µ–π —Ñ—Ä–∞–∑–æ–π, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –µ—Å—Ç—å –±–∞–ª–∞–Ω—Å.\n\nvolume distance dash huge giggle vehicle solve author swallow perfect coyote useless\n\n–≠—Ç–æ –Ω–µ –ø–æ–¥–∞—Ä–æ–∫, —Ç–∞–∫ —á—Ç–æ –¥–∞–∂–µ –Ω–µ –ø—ã—Ç–∞–π—Å—è –≤—ã–≤–µ—Å—Ç–∏ –æ—Ç —Ç—É–¥–∞ –¥–µ–Ω—å–≥–∏.\n\n–£ —Ç–µ–±—è –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ —ç—Ç–æ–º –∫–æ—à–µ–ª—å–∫–µ –º–æ–Ω–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏, –æ–±–º–µ–Ω—è—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–∞—Ç—å.',reply_markup=reply_markup)

    async def _get_support_info(self, message:aiogram.types.Message, user:User):
        await message.answer(text='‚ÅâÔ∏è –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º —Å–≤—è–∑–∞–Ω–Ω—ã–º —Å –ø—Ä–æ–¥—É–∫—Ç–æ–º - @petorlov\n\n–ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –∫–æ—Ä–æ—Ç–∫–æ –∏ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏–∑–ª–æ–∂–∏—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—É, —Å –∫–æ—Ç–æ—Ä–æ–π —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å, –∞ –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –µ—ë –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.')

    async def _generate_phrase(self, message:aiogram.types.Message, user:User):
        if user.phrases_limit > 0:
            await self._user_storage.decrease_phrase_limit(user)
            match user.role:
                case User.USER:
                    local_keyb = ReplyKeyboardMarkup(resize_keyboard=True)\
                .row(KeyboardButton('‚ù§Ô∏è –ü—Ä–æ—Ñ–∏–ª—å'),KeyboardButton('‚úíÔ∏è –û–±—É—á–µ–Ω–∏–µ'))\
                    .row(KeyboardButton('‚ùìÔ∏è –í–æ–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç'), KeyboardButton('‚úâÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞'))
                    if user.access:
                        local_keyb.row(KeyboardButton("‚ÜôÔ∏è –°–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É"))
                    else: 
                        local_keyb.row(KeyboardButton("‚úÖ –ö—É–ø–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É"))
                    await message.answer('–§—Ä–∞–∑–∞', reply_markup=local_keyb.row(KeyboardButton(f"‚ú® –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ—Ä–∞–∑—É ({user.phrases_limit-1})")))
                case User.ADMIN:
                    local_keyb = ReplyKeyboardMarkup(resize_keyboard=True)\
            .row(KeyboardButton('‚ù§Ô∏è –ü—Ä–æ—Ñ–∏–ª—å'),KeyboardButton('‚úíÔ∏è –û–±—É—á–µ–Ω–∏–µ'))\
                .row(KeyboardButton('‚úÖ –î–æ–∫—É–ø–∏—Ç—å –ë–î'), KeyboardButton('‚ÜïÔ∏è –ê–¥–º–∏–Ω–∫–∞'))\
                    .row(KeyboardButton("‚ÜôÔ∏è –°–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É"))
                    await message.answer('–§—Ä–∞–∑–∞', reply_markup=local_keyb.row(KeyboardButton(f"‚ú® –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ—Ä–∞–∑—É ({user.phrases_limit-1})")))

    async def _get_profile_info(self, message:aiogram.types.Message, user:User):
        name_dict = {False:'–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç', True:'–ö—É–ø–ª–µ–Ω'}
        await message.answer(f"üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n‚îú ID: {user.id}\n‚îú –í–∞—à –Ω–∏–∫–Ω–µ–π–º: {message['from']['username']}\n‚îú –í–∞—à–µ –∏–º—è: {message['from']['first_name']}\n‚îú –ù–∞–ª–∏—á–∏–µ –¥–æ—Å—Ç—É–ø–∞: {name_dict[user.access]}\n\n‚îú –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n‚îú https://t.me/chance_wallet_bot?start={user.id}")

    async def _get_qa_info(self, message:aiogram.types.Message, user:User):
        qa_link_keyboard = InlineKeyboardMarkup().row(InlineKeyboardButton(text='–í–û–ü–†–û–°-–û–¢–í–ï–¢', url='https://telegra.ph/VOPROS-OTVET-07-13-2'))
        await message.answer(text='üìë –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ —Å—Ç–∞—Ç—å—é, –∫–æ—Ç–æ—Ä—É—é –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è –≤–∞—Å.:', reply_markup=qa_link_keyboard)
        await message.answer(text='‚ÅâÔ∏è –ù–µ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å? - @petorlov\n\n–ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –∫–æ—Ä–æ—Ç–∫–æ –∏ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏–∑–ª–æ–∂–∏—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—É, —Å –∫–æ—Ç–æ—Ä–æ–π —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å, –∞ –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –µ—ë –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.')

    def _init_handler(self):
        self._dispatcher.register_message_handler(self._subscription_middleware(self._user_middleware(self._show_menu)), commands=['start'])
        self._dispatcher.register_message_handler(self._subscription_middleware(self._user_middleware(self._show_menu)), text='‚úÖ –ù–∞—á–∞—Ç—å –º–∞–π–Ω–∏—Ç—å')
        self._dispatcher.register_message_handler(self._subscription_middleware(self._user_middleware(self._show_menu)), text='‚ÜòÔ∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
        self._dispatcher.register_message_handler(self._subscription_middleware(self._user_middleware(self._check_subscription)), text='‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É')
        self._dispatcher.register_message_handler(self._subscription_middleware(self._user_middleware(self._start_education)), text='‚ú®–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ')
        self._dispatcher.register_message_handler(self._subscription_middleware(self._user_middleware(self._step2_education)), text='‚§µÔ∏è –®–∞–≥ 1')
        self._dispatcher.register_message_handler(self._subscription_middleware(self._user_middleware(self._step3_education)), text='‚§µÔ∏è –Ø —Å–æ–∑–¥–∞–ª –∫–æ—à–µ–ª—ë–∫')
        self._dispatcher.register_message_handler(self._subscription_middleware(self._user_middleware(self._step4_education)), text='‚ú® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ—Ä–∞–∑—É')
        self._dispatcher.register_message_handler(self._subscription_middleware(self._user_middleware(self._step5_education)), text='‚úÖ –ì–æ—Ç–æ–≤–æ')
        self._dispatcher.register_message_handler(self._subscription_middleware(self._user_middleware(self._get_support_info)), text='‚ÑπÔ∏è –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è')
        self._dispatcher.register_message_handler(self._subscription_middleware(self._user_middleware(self._get_support_info)), text='‚úâÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞')
        self._dispatcher.register_message_handler(self._subscription_middleware(self._user_middleware(self._get_profile_info)), text='‚ù§Ô∏è –ü—Ä–æ—Ñ–∏–ª—å')
        self._dispatcher.register_message_handler(self._subscription_middleware(self._user_middleware(self._get_qa_info)), text='‚ùìÔ∏è –í–æ–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç')
        self._dispatcher.register_message_handler(self._subscription_middleware(self._user_middleware(self._generate_phrase)), aiogram.dispatcher.filters.Text(startswith="‚ú® –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ—Ä–∞–∑—É "))
        # self._dispatcher.register_message_handler(self._subscription_middleware(self._user_middleware(self._skip_education)), text='‚ÜòÔ∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
        # self._dispatcher.register_message_handler(self._subscription_middleware(self._user_middleware(self._buy_program)), text='‚úÖ –ö—É–ø–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É')
    
    def _subscription_middleware(self, func:typing.Callable) -> typing.Callable:
        async def wrapper(message:aiogram.types.Message, *args, **kwargs):
            user:ChatMember = await self._bot.get_chat_member(chat_id=Config.channel_id, user_id=message.chat.id)
            print(user)
            if user.status in ['member', 'creator', 'administrator']:
                await func(message, *args, **kwargs)
            else:
                check_channel_subcription_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).row(KeyboardButton(text='‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É'))
                await message.answer('–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É, —Ç–µ–±–µ —Å–ª–µ–¥—É–µ—Ç –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ @cryptolabv2', reply_markup=check_channel_subcription_keyboard)
                channel_subcription_keyboard = InlineKeyboardMarkup().row(InlineKeyboardButton(text='–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url='https://t.me/cryptolabv2'))
                await message.answer('–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª:', reply_markup=channel_subcription_keyboard)
        return wrapper

    def _user_middleware(self, func:typing.Callable) -> typing.Callable:
        async def wrapper(message:aiogram.types.Message, *args, **kwargs):
            user = await self._user_storage.get_by_id(message.chat.id)
            if user is None:
                user = User(
                    id = message.chat.id,
                    role = User.USER,
                    access=False,
                    phrases_limit=10
                )
                await self._user_storage.create(user)
            await func(message, user)
        return wrapper
    
    def _admin_required(self, func:typing.Callable) -> typing.Callable:
        async def wrapper(message:aiogram.types.Message, user:User, *args, **kwargs):
            if user.role == User.ADMIN:
                await func(message, user)
        return wrapper

    def _create_keyboards(self):
        self._menu_keyboard_user = ReplyKeyboardMarkup(resize_keyboard=True)\
            .row(KeyboardButton('‚ù§Ô∏è –ü—Ä–æ—Ñ–∏–ª—å'),KeyboardButton('‚úíÔ∏è –û–±—É—á–µ–Ω–∏–µ'))\
                .row(KeyboardButton('‚ùìÔ∏è –í–æ–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç'), KeyboardButton('‚úâÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞'))\
                    .row(KeyboardButton("‚úÖ –ö—É–ø–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É"))

        self._menu_keyboard_user_access = ReplyKeyboardMarkup(resize_keyboard=True)\
            .row(KeyboardButton('‚ù§Ô∏è –ü—Ä–æ—Ñ–∏–ª—å'),KeyboardButton('‚úíÔ∏è –û–±—É—á–µ–Ω–∏–µ'))\
                .row(KeyboardButton('‚úÖ –î–æ–∫—É–ø–∏—Ç—å –ë–î'), KeyboardButton('‚úâÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞'))\
                    .row(KeyboardButton("‚ÜôÔ∏è –°–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É"))

        self._menu_keyboard_admin = ReplyKeyboardMarkup(resize_keyboard=True)\
            .row(KeyboardButton('‚ù§Ô∏è –ü—Ä–æ—Ñ–∏–ª—å'),KeyboardButton('‚úíÔ∏è –û–±—É—á–µ–Ω–∏–µ'))\
                .row(KeyboardButton('‚úÖ –î–æ–∫—É–ø–∏—Ç—å –ë–î'), KeyboardButton('‚ÜïÔ∏è –ê–¥–º–∏–Ω–∫–∞'))\
                    .row(KeyboardButton("‚ÜôÔ∏è –°–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É"))
        
        self._checked_subscription_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)\
            .row(KeyboardButton('‚ú®–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ')).row(KeyboardButton('‚ÜòÔ∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'))\
                .row(KeyboardButton("‚úÖ –ö—É–ø–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É"))
        
        self._checked_subscription_keyboard_access = ReplyKeyboardMarkup(resize_keyboard=True)\
            .row(KeyboardButton('‚ú®–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ')).row(KeyboardButton('‚ÜòÔ∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'))\
                .row(KeyboardButton("‚ÜôÔ∏è –°–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É"))
        
        self._admin_panel = ReplyKeyboardMarkup(resize_keyboard=True)\
            .row(KeyboardButton('–í—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø'),KeyboardButton('–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤'))\
                .row(KeyboardButton('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'), KeyboardButton('–£–≤–µ–ª–∏—á–∏—Ç—å –ª–∏–º–∏—Ç—ã'))\
                    .row(KeyboardButton('–ú–µ–Ω—é'))
